(function(){"use strict";const b=(o,n)=>{let t=0,r=0,a=0;for(let c=0;c<o.length;c+=1){const h=o[c],e=n[c];t+=h*e,r+=h*h,a+=e*e}return r===0||a===0?0:t/(Math.sqrt(r)*Math.sqrt(a))},m=o=>{const n=new Map;return o.forEach(t=>{t.parentId&&(n.has(t.parentId)||n.set(t.parentId,[]),n.get(t.parentId).push(t))}),n},I=(o,n)=>{let t,r=-1/0;return o.forEach(a=>{const c=b(n,a.embedding);c>r&&(r=c,t=a)}),{bestNode:t,bestScore:r}},k=(o,n,t)=>{if(o.length===0)return{path:[]};const r=new Map;o.forEach(s=>r.set(s.id,s));const a=m(o);let h=n?n.map(s=>r.get(s)).filter(s=>!!s):o.filter(s=>s.level===0);const e=[];let l;for(;h.length>0;){const{bestNode:s,bestScore:i}=I(h,t);if(!s)break;e.push({node:s,score:i});const p=a.get(s.id)??[];if(p.length===0){l=s;break}h=p}return!l&&e.length>0&&(l=e[e.length-1].node),{leaf:l,path:e}},u=(o,n,t)=>{const r=[];let a=-1/0,c;n.forEach((e,l)=>{const s=b(o,e.embedding),i={pieceId:e.pieceId,row:e.row,col:e.col,score:s};r.push(i),s>a&&(a=s,c=i),t(l+1,n.length)}),r.sort((e,l)=>l.score-e.score);const h=r.slice(0,5).map((e,l)=>({...e,rank:l+1}));return{bestCandidate:c,ranked:h}},v=o=>{const{pieces:n,targetEmbedding:t,puzzleId:r,hierarchyNodes:a,rootNodeIds:c}=o,h=(d,f)=>{const g={type:"match-progress",processed:d,total:f};self.postMessage(g)};let e={path:[]};a&&a.length>0&&(e=k(a,c,t));let l=n;if(e.leaf&&e.leaf.pieceIds.length>0){const d=new Set(e.leaf.pieceIds),f=n.filter(g=>d.has(g.pieceId));f.length>0&&(l=f)}const s=u(t,l,h);let i=s.ranked,p=s.bestCandidate&&s.bestCandidate.score>0?s.bestCandidate:void 0;if(a&&a.length>0&&e.path.length>0&&(!p||p.score<.55)){const d=u(t,n,()=>{});d.bestCandidate&&d.bestCandidate.score>(p?.score??0)&&(i=d.ranked,p=d.bestCandidate)}const w={type:"match-result",puzzleId:r,match:i[0]?{pieceId:i[0].pieceId,row:i[0].row,col:i[0].col,score:i[0].score}:void 0,candidates:i,path:e.path.map(({node:d,score:f})=>({nodeId:d.id,level:d.level,score:f,bounds:d.bounds}))};self.postMessage(w)};self.onmessage=o=>{const{data:n}=o;if(n.type==="match")try{v(n)}catch(t){console.error("Match worker failed",t);const r={type:"match-error",message:t instanceof Error?t.message:"Unknown worker error"};self.postMessage(r)}}})();
